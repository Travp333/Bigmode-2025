using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using Scripting.PDollarGestureRecognizer;
using UnityEngine;
using UnityEngine.InputSystem;

namespace Scripting.Desk
{
    public class Drawing : MonoBehaviour
    {
        [SerializeField] private float samplingRate;
        
        private readonly Gesture[] _trainingsSet =
        {
            new(new Point[]
            {
                new(0.00192337f, 0.9413393f, 0), new(0.00192337f, 0.9413393f, 0), new(0.00192337f, 0.9413393f, 1),
                new(0.00192337f, 0.9413393f, 1), new(0.00192337f, 0.9413393f, 2), new(0.04825317f, 0.9195955f, 2),
                new(0.04825317f, 0.9195955f, 3), new(0.2297875f, 0.916317f, 3), new(0.2297875f, 0.916317f, 4),
                new(0.5716527f, 0.9163151f, 4), new(0.5716527f, 0.9163151f, 5), new(0.892792f, 0.9163195f, 5),
                new(0.892792f, 0.9163195f, 6), new(0.9948427f, 0.9163157f, 6), new(0.9948427f, 0.9163157f, 7),
                new(1f, 0.9163141f, 7), new(1f, 0.9163141f, 8), new(1f, 0.9163141f, 8), new(1f, 0.9163141f, 9),
                new(1f, 0.9163141f, 9), new(1f, 0.9163141f, 10), new(1f, 0.9163141f, 10), new(1f, 0.9163141f, 11),
                new(1f, 0.9163141f, 11), new(1f, 0.9163141f, 12), new(0.9999895f, 0.8886206f, 12),
                new(0.9999895f, 0.8886206f, 13), new(0.9999049f, 0.7297649f, 13), new(0.9999049f, 0.7297649f, 14),
                new(0.9868962f, 0.5371171f, 14), new(0.9868962f, 0.5371171f, 15), new(0.9764398f, 0.3744879f, 15),
                new(0.9764398f, 0.3744879f, 16), new(0.9764275f, 0.3519748f, 16), new(0.9764275f, 0.3519748f, 17),
                new(0.976408f, 0.2772983f, 17), new(0.976408f, 0.2772983f, 18), new(0.9634424f, 0.1238647f, 18),
                new(0.9634424f, 0.1238647f, 19), new(0.9543451f, 0.009976343f, 19), new(0.9543451f, 0.009976343f, 20),
                new(0.9530366f, 0f, 20), new(0.9530366f, 0f, 21), new(0.9530366f, 0f, 21), new(0.9530366f, 0f, 22),
                new(0.9530366f, 0f, 22), new(0.9530366f, 0f, 23), new(0.9530366f, 0f, 23), new(0.9530366f, 0f, 24),
                new(0.9530366f, 0f, 24), new(0.9530366f, 0f, 25), new(0.8197784f, 3.730094E-06f, 25),
                new(0.8197784f, 3.730094E-06f, 26), new(0.6075227f, 0f, 26), new(0.6075227f, 0f, 27),
                new(0.3127079f, 0.02182519f, 27), new(0.3127079f, 0.02182519f, 28), new(0.0918671f, 0.04365101f, 28),
                new(0.0918671f, 0.04365101f, 29), new(0.01471023f, 0.05030218f, 29), new(0.01471023f, 0.05030218f, 30),
                new(0.01471023f, 0.05030218f, 30), new(0.01471023f, 0.05030218f, 31), new(0.01471023f, 0.05030218f, 31),
                new(0.01471023f, 0.05030218f, 32), new(0.01471023f, 0.05030218f, 32), new(0.01471023f, 0.05030218f, 33),
                new(0.01471458f, 0.05955281f, 33), new(0.01471458f, 0.05955281f, 34), new(0.01472139f, 0.0628727f, 34),
                new(0.01472139f, 0.0628727f, 35), new(0.01472139f, 0.0628727f, 35), new(0.01472139f, 0.0628727f, 36),
                new(0.01472978f, 0.08137417f, 36), new(0.01472978f, 0.08137417f, 37), new(0.000719372f, 0.2678008f, 37),
                new(0.000719372f, 0.2678008f, 38), new(0f, 0.4887416f, 38), new(0f, 0.4887416f, 39),
                new(0.0006583322f, 0.6895385f, 39), new(0.0006583322f, 0.6895385f, 40),
                new(0.001406088f, 0.859053f, 40), new(0.001406088f, 0.859053f, 41), new(0.002122274f, 1f, 41),
                new(0.002122274f, 1f, 42), new(0.002158406f, 0.9821324f, 42), new(0.002158406f, 0.9821324f, 43),
                new(0.002089401f, 0.9696317f, 43), new(0.002089401f, 0.9696317f, 44), new(0.00192337f, 0.9413393f, 44),
                new(0.00192337f, 0.9413393f, 45), new(0.00192337f, 0.9413393f, 45), new(0.00192337f, 0.9413393f, 46),
                new(0.00192337f, 0.9413393f, 46), new(0.00192337f, 0.9413393f, 47), new(0.00192337f, 0.9413393f, 47)
            }, "box"),
            new(new Point[]
            {
                new(0.0874525f, 1f, 0), new(0.1092865f, 0.9445542f, 0), new(0.1092865f, 0.9445542f, 1),
                new(0.244536f, 0.6098222f, 1), new(0.244536f, 0.6098222f, 2), new(0.377231f, 0.2501286f, 2),
                new(0.377231f, 0.2501286f, 3), new(0.4465162f, 0.04036276f, 3), new(0.4465162f, 0.04036276f, 4),
                new(0.4612473f, 0.005954559f, 4), new(0.4612473f, 0.005954559f, 5), new(0.4633616f, 0f, 5),
                new(0.4633616f, 0f, 6), new(0.4633616f, 0f, 6), new(0.4633616f, 0f, 7), new(0.4633595f, 0.00827194f, 7),
                new(0.4633595f, 0.00827194f, 8), new(0.5862806f, 0.3283262f, 8), new(0.5862806f, 0.3283262f, 9),
                new(0.700068f, 0.5581628f, 9), new(0.700068f, 0.5581628f, 10), new(0.79697f, 0.7326204f, 10),
                new(0.79697f, 0.7326204f, 11), new(0.8569968f, 0.8507597f, 11), new(0.8569968f, 0.8507597f, 12),
                new(0.8675533f, 0.899155f, 12), new(0.8675533f, 0.899155f, 13), new(0.8675533f, 0.899155f, 13),
                new(0.8675533f, 0.899155f, 14), new(0.8675533f, 0.899155f, 14), new(0.8675533f, 0.899155f, 15),
                new(0.8297173f, 0.8826244f, 15), new(0.8297173f, 0.8826244f, 16), new(0.6425664f, 0.7545272f, 16),
                new(0.6425664f, 0.7545272f, 17), new(0.3439447f, 0.5553751f, 17), new(0.3439447f, 0.5553751f, 18),
                new(0.09818721f, 0.4542263f, 18), new(0.09818721f, 0.4542263f, 19), new(0f, 0.4050035f, 19),
                new(0f, 0.4050035f, 20), new(0.03553081f, 0.4050033f, 20), new(0.03553081f, 0.4050033f, 21),
                new(0.03553081f, 0.4050033f, 21), new(0.03553081f, 0.4050033f, 22), new(0.03553081f, 0.4050033f, 22),
                new(0.03553081f, 0.4050033f, 23), new(0.03553081f, 0.4050033f, 23), new(0.03553081f, 0.4050033f, 24),
                new(0.03553081f, 0.4050033f, 24), new(0.03553081f, 0.4050033f, 25), new(0.03553081f, 0.4050033f, 25),
                new(0.03553081f, 0.4050033f, 26), new(0.0460159f, 0.4050035f, 26), new(0.0460159f, 0.4050035f, 27),
                new(0.1612731f, 0.3967246f, 27), new(0.1612731f, 0.3967246f, 28), new(0.3836038f, 0.377206f, 28),
                new(0.3836038f, 0.377206f, 29), new(0.6241957f, 0.3434694f, 29), new(0.6241957f, 0.3434694f, 30),
                new(0.8240525f, 0.3097241f, 30), new(0.8240525f, 0.3097241f, 31), new(0.9725518f, 0.2955009f, 31),
                new(0.9725518f, 0.2955009f, 32), new(1f, 0.292527f, 32), new(1f, 0.292527f, 33), new(1f, 0.292527f, 33),
                new(1f, 0.292527f, 34), new(1f, 0.292527f, 34), new(1f, 0.292527f, 35), new(1f, 0.292527f, 35),
                new(1f, 0.292527f, 36), new(1f, 0.292527f, 36), new(1f, 0.292527f, 37), new(0.8675799f, 0.411348f, 37),
                new(0.8675799f, 0.411348f, 38), new(0.6245403f, 0.6060859f, 38), new(0.6245403f, 0.6060859f, 39),
                new(0.3609545f, 0.7468058f, 39), new(0.3609545f, 0.7468058f, 40), new(0.1976355f, 0.8342307f, 40),
                new(0.1976355f, 0.8342307f, 41), new(0.1225285f, 0.9015217f, 41), new(0.1225285f, 0.9015217f, 42),
                new(0.07780338f, 0.9605072f, 42), new(0.07780338f, 0.9605072f, 43), new(0.06428052f, 0.966397f, 43),
                new(0.06428052f, 0.966397f, 44), new(0.06222693f, 0.9663924f, 44), new(0.06222693f, 0.9663924f, 45),
                new(0.06222693f, 0.9663924f, 45), new(0.06222693f, 0.9663924f, 46), new(0.06222693f, 0.9663924f, 46),
                new(0.06222693f, 0.9663924f, 47), new(0.06222693f, 0.9663924f, 47), new(0.06222693f, 0.9663924f, 48),
                new(0.06222693f, 0.9663924f, 48)
            }, "pentagramm"),

            new(new Point[]
            {
                new(0.3282202f, 0.8717348f, 0), new(0.3282202f, 0.8717348f, 0), new(0.3282202f, 0.8717348f, 1),
                new(0.2922624f, 0.8717358f, 1), new(0.2922624f, 0.8717358f, 2), new(0.2297191f, 0.8717395f, 2),
                new(0.2297191f, 0.8717395f, 3), new(0.1578281f, 0.836454f, 3), new(0.1578281f, 0.836454f, 4),
                new(0.1151568f, 0.7899083f, 4), new(0.1151568f, 0.7899083f, 5), new(0.08983026f, 0.7613807f, 5),
                new(0.08983026f, 0.7613807f, 6), new(0.07379585f, 0.7328342f, 6), new(0.07379585f, 0.7328342f, 7),
                new(0.04977193f, 0.6937762f, 7), new(0.04977193f, 0.6937762f, 8), new(0.01901136f, 0.6261542f, 8),
                new(0.01901136f, 0.6261542f, 9), new(0.008247237f, 0.5757751f, 9), new(0.008247237f, 0.5757751f, 10),
                new(0.0001660342f, 0.5329191f, 10), new(0.0001660342f, 0.5329191f, 11), new(0f, 0.4547281f, 11),
                new(0f, 0.4547281f, 12), new(0.006433937f, 0.3508918f, 12), new(0.006433937f, 0.3508918f, 13),
                new(0.01429359f, 0.2899104f, 13), new(0.01429359f, 0.2899104f, 14), new(0.02887374f, 0.2507875f, 14),
                new(0.02887374f, 0.2507875f, 15), new(0.04479023f, 0.222175f, 15), new(0.04479023f, 0.222175f, 16),
                new(0.07533753f, 0.1792678f, 16), new(0.07533753f, 0.1792678f, 17), new(0.1298236f, 0.1115104f, 17),
                new(0.1298236f, 0.1115104f, 18), new(0.2309557f, 0.03619089f, 18), new(0.2309557f, 0.03619089f, 19),
                new(0.2908885f, 0.01431323f, 19), new(0.2908885f, 0.01431323f, 20), new(0.3455282f, 4.715978E-06f, 20),
                new(0.3455282f, 4.715978E-06f, 21), new(0.4388602f, 0f, 21), new(0.4388602f, 0f, 22),
                new(0.5642615f, 4.833878E-06f, 22), new(0.5642615f, 4.833878E-06f, 23),
                new(0.6630645f, 0.02483953f, 23), new(0.6630645f, 0.02483953f, 24), new(0.7712759f, 0.05345573f, 24),
                new(0.7712759f, 0.05345573f, 25), new(0.8260393f, 0.0677646f, 25), new(0.8260393f, 0.0677646f, 26),
                new(0.8995566f, 0.1536181f, 26), new(0.8995566f, 0.1536181f, 27), new(0.9263138f, 0.2070556f, 27),
                new(0.9263138f, 0.2070556f, 28), new(0.949036f, 0.2747952f, 28), new(0.949036f, 0.2747952f, 29),
                new(0.9811305f, 0.3711233f, 29), new(0.9811305f, 0.3711233f, 30), new(0.9985377f, 0.4606696f, 30),
                new(0.9985377f, 0.4606696f, 31), new(0.999912f, 0.5396699f, 31), new(0.999912f, 0.5396699f, 32),
                new(0.999931f, 0.5930439f, 32), new(0.999931f, 0.5930439f, 33), new(0.9999546f, 0.6501781f, 33),
                new(0.9999546f, 0.6501781f, 34), new(0.9999799f, 0.7072842f, 34), new(0.9999799f, 0.7072842f, 35),
                new(1f, 0.7501053f, 35), new(1f, 0.7501053f, 36), new(0.9933579f, 0.8071879f, 36),
                new(0.9933579f, 0.8071879f, 37), new(0.9840421f, 0.8537226f, 37), new(0.9840421f, 0.8537226f, 38),
                new(0.9760532f, 0.8822446f, 38), new(0.9760532f, 0.8822446f, 39), new(0.9760588f, 0.8859922f, 39),
                new(0.9760588f, 0.8859922f, 40), new(0.9760588f, 0.8859922f, 40), new(0.9760588f, 0.8859922f, 41),
                new(0.9533804f, 0.8965043f, 41), new(0.9533804f, 0.8965043f, 42), new(0.9227127f, 0.9145019f, 42),
                new(0.9227127f, 0.9145019f, 43), new(0.8627002f, 0.9392731f, 43), new(0.8627002f, 0.9392731f, 44),
                new(0.7827133f, 0.9677691f, 44), new(0.7827133f, 0.9677691f, 45), new(0.768091f, 0.9857622f, 45),
                new(0.768091f, 0.9857622f, 46), new(0.768091f, 0.9857622f, 46), new(0.768091f, 0.9857622f, 47),
                new(0.768091f, 0.9857622f, 47), new(0.768091f, 0.9857622f, 48), new(0.768091f, 0.9857622f, 48),
                new(0.768091f, 0.9857622f, 49), new(0.754752f, 0.9857634f, 49), new(0.754752f, 0.9857634f, 50),
                new(0.6814151f, 0.9857573f, 50), new(0.6814151f, 0.9857573f, 51), new(0.5681759f, 0.9999934f, 51),
                new(0.5681759f, 0.9999934f, 52), new(0.5215904f, 0.9999995f, 52), new(0.5215904f, 0.9999995f, 53),
                new(0.5202662f, 1f, 53), new(0.5202662f, 1f, 54), new(0.5202662f, 1f, 54), new(0.5202662f, 1f, 55),
                new(0.5202662f, 1f, 55), new(0.5202662f, 1f, 56), new(0.5202662f, 1f, 56), new(0.5202662f, 1f, 57),
                new(0.5202662f, 1f, 57), new(0.5202662f, 1f, 58), new(0.5202662f, 1f, 58), new(0.5202662f, 1f, 59),
                new(0.5202662f, 1f, 59), new(0.5202662f, 1f, 60), new(0.5202662f, 1f, 60), new(0.5202662f, 1f, 61),
                new(0.5345542f, 0.7914141f, 61), new(0.5345542f, 0.7914141f, 62), new(0.5354544f, 0.545017f, 62),
                new(0.5354544f, 0.545017f, 63), new(0.5352172f, 0.3659879f, 63), new(0.5352172f, 0.3659879f, 64),
                new(0.5350817f, 0.2297395f, 64), new(0.5350817f, 0.2297395f, 65), new(0.5350057f, 0.1152966f, 65),
                new(0.5350057f, 0.1152966f, 66), new(0.534966f, 0.04672179f, 66), new(0.534966f, 0.04672179f, 67),
                new(0.5349591f, 0.02861667f, 67), new(0.5349591f, 0.02861667f, 68), new(0.5349591f, 0.02861667f, 68),
                new(0.5349591f, 0.02861667f, 69), new(0.5349591f, 0.02861667f, 69), new(0.5349591f, 0.02861667f, 70),
                new(0.5349591f, 0.02861667f, 70), new(0.5349591f, 0.02861667f, 71), new(0.5349591f, 0.02861667f, 71),
                new(0.5349591f, 0.02861667f, 72), new(0.5349591f, 0.02861667f, 72)
            }, "cd"),
            new(new Point[]
            {
                new(0.9122934f, 0.8485347f, 0), new(0.9123162f, 0.8612986f, 0), new(0.9123162f, 0.8612986f, 1),
                new(0.9123352f, 0.878849f, 1), new(0.9123352f, 0.878849f, 2), new(0.894058f, 0.9065022f, 2),
                new(0.894058f, 0.9065022f, 3), new(0.870343f, 0.9569868f, 3), new(0.870343f, 0.9569868f, 4),
                new(0.8484469f, 0.9899078f, 4), new(0.8484469f, 0.9899078f, 5), new(0.7972183f, 1f, 5),
                new(0.7972183f, 1f, 6), new(0.7203621f, 0.9925571f, 6), new(0.7203621f, 0.9925571f, 7),
                new(0.6636268f, 0.9824632f, 7), new(0.6636268f, 0.9824632f, 8), new(0.5995343f, 0.957487f, 8),
                new(0.5995343f, 0.957487f, 9), new(0.5335457f, 0.9170999f, 9), new(0.5335457f, 0.9170999f, 10),
                new(0.4876783f, 0.8767062f, 10), new(0.4876783f, 0.8767062f, 11), new(0.4637771f, 0.8437391f, 11),
                new(0.4637771f, 0.8437391f, 12), new(0.4527288f, 0.8235251f, 12), new(0.4527288f, 0.8235251f, 13),
                new(0.4306422f, 0.7782933f, 13), new(0.4306422f, 0.7782933f, 14), new(0.4084433f, 0.7000409f, 14),
                new(0.4084433f, 0.7000409f, 15), new(0.3972181f, 0.616392f, 15), new(0.3972181f, 0.616392f, 16),
                new(0.3842581f, 0.5630909f, 16), new(0.3842581f, 0.5630909f, 17), new(0.3841655f, 0.5225675f, 17),
                new(0.3841655f, 0.5225675f, 18), new(0.3730569f, 0.4569806f, 18), new(0.3730569f, 0.4569806f, 19),
                new(0.3637638f, 0.3684274f, 19), new(0.3637638f, 0.3684274f, 20), new(0.361824f, 0.2920797f, 20),
                new(0.361824f, 0.2920797f, 21), new(0.3617882f, 0.2562892f, 21), new(0.3617882f, 0.2562892f, 22),
                new(0.3526065f, 0.2082533f, 22), new(0.3526065f, 0.2082533f, 23), new(0.3507416f, 0.150075f, 23),
                new(0.3507416f, 0.150075f, 24), new(0.3397462f, 0.09666687f, 24), new(0.3397462f, 0.09666687f, 25),
                new(0.3397483f, 0.06355088f, 25), new(0.3397483f, 0.06355088f, 26), new(0.3287646f, 0.03580051f, 26),
                new(0.3287646f, 0.03580051f, 27), new(0.3287784f, 0.01283091f, 27), new(0.3287784f, 0.01283091f, 28),
                new(0.3287849f, 0f, 28), new(0.3287849f, 0f, 29), new(0.3287849f, 0f, 29), new(0.3287849f, 0f, 30),
                new(0.3196289f, 0.01492339f, 30), new(0.3196289f, 0.01492339f, 31), new(0.3086132f, 0.08056357f, 31),
                new(0.3086132f, 0.08056357f, 32), new(0.3067781f, 0.1894757f, 32), new(0.3067781f, 0.1894757f, 33),
                new(0.3068541f, 0.3010584f, 33), new(0.3068541f, 0.3010584f, 34), new(0.3069381f, 0.3672644f, 34),
                new(0.3069381f, 0.3672644f, 35), new(0.3070125f, 0.410505f, 35), new(0.3070125f, 0.410505f, 36),
                new(0.2960869f, 0.4435951f, 36), new(0.2960869f, 0.4435951f, 37), new(0.2961176f, 0.4564085f, 37),
                new(0.2961176f, 0.4564085f, 38), new(0.2760422f, 0.4915963f, 38), new(0.2760422f, 0.4915963f, 39),
                new(0.2632908f, 0.522002f, 39), new(0.2632908f, 0.522002f, 40), new(0.2340829f, 0.5523969f, 40),
                new(0.2340829f, 0.5523969f, 41), new(0.160984f, 0.5854594f, 41), new(0.160984f, 0.5854594f, 42),
                new(0.08234394f, 0.5881299f, 42), new(0.08234394f, 0.5881299f, 43), new(0.02564321f, 0.5806749f, 43),
                new(0.02564321f, 0.5806749f, 44), new(0.001826119f, 0.5678707f, 44), new(0.001826119f, 0.5678707f, 45),
                new(0f, 0.567872f, 45), new(0f, 0.567872f, 46), new(0f, 0.567872f, 46), new(0f, 0.567872f, 47),
                new(0f, 0.567872f, 47), new(0f, 0.567872f, 48), new(0f, 0.567872f, 48), new(0f, 0.567872f, 49),
                new(0.05852787f, 0.5678684f, 49), new(0.05852787f, 0.5678684f, 50), new(0.214013f, 0.5678713f, 50),
                new(0.214013f, 0.5678713f, 51), new(0.4116892f, 0.5678736f, 51), new(0.4116892f, 0.5678736f, 52),
                new(0.6497907f, 0.5678748f, 52), new(0.6497907f, 0.5678748f, 53), new(0.8715618f, 0.5753297f, 53),
                new(0.8715618f, 0.5753297f, 54), new(0.9853117f, 0.5780039f, 54), new(0.9853117f, 0.5780039f, 55),
                new(1f, 0.5780017f, 55), new(1f, 0.5780017f, 56), new(1f, 0.5780017f, 56), new(1f, 0.5780017f, 57),
                new(1f, 0.5780017f, 57), new(1f, 0.5780017f, 58), new(1f, 0.5780017f, 58), new(1f, 0.5780017f, 59),
                new(1f, 0.5780017f, 59), new(1f, 0.5780017f, 60), new(1f, 0.5780017f, 60), new(1f, 0.5780017f, 61),
                new(1f, 0.5780017f, 61), new(1f, 0.5780017f, 62), new(1f, 0.5780017f, 62)
            }, "f"),
            new(new Point[]
            {
                new(0f, 0.05304383f, 0), new(0.020979f, 0.1227566f, 0), new(0.020979f, 0.1227566f, 1),
                new(0.08401407f, 0.3102833f, 1), new(0.08401407f, 0.3102833f, 2), new(0.1291959f, 0.4327459f, 2),
                new(0.1291959f, 0.4327459f, 3), new(0.1492757f, 0.4597714f, 3), new(0.1492757f, 0.4597714f, 4),
                new(0.1773063f, 0.4337624f, 4), new(0.1773063f, 0.4337624f, 5), new(0.208262f, 0.3476959f, 5),
                new(0.208262f, 0.3476959f, 6), new(0.2272532f, 0.2681211f, 6), new(0.2272532f, 0.2681211f, 7),
                new(0.239269f, 0.1773536f, 7), new(0.239269f, 0.1773536f, 8), new(0.2402884f, 0.1131106f, 8),
                new(0.2402884f, 0.1131106f, 9), new(0.2403023f, 0.09725478f, 9), new(0.2403023f, 0.09725478f, 10),
                new(0.2403023f, 0.09725478f, 10), new(0.2403023f, 0.09725478f, 11), new(0.2463131f, 0.1102606f, 11),
                new(0.2463131f, 0.1102606f, 12), new(0.2793799f, 0.2595682f, 12), new(0.2793799f, 0.2595682f, 13),
                new(0.3206232f, 0.4452477f, 13), new(0.3206232f, 0.4452477f, 14), new(0.3640153f, 0.615467f, 14),
                new(0.3640153f, 0.615467f, 15), new(0.4114913f, 0.7743365f, 15), new(0.4114913f, 0.7743365f, 16),
                new(0.48611f, 0.9329523f, 16), new(0.48611f, 0.9329523f, 17), new(0.5615237f, 0.9999999f, 17),
                new(0.5615237f, 0.9999999f, 18), new(0.5784535f, 0.964835f, 18), new(0.5784535f, 0.964835f, 19),
                new(0.588455f, 0.9430544f, 19), new(0.588455f, 0.9430544f, 20), new(0.6553931f, 0.7483622f, 20),
                new(0.6553931f, 0.7483622f, 21), new(0.7294919f, 0.4989525f, 21), new(0.7294919f, 0.4989525f, 22),
                new(0.7455373f, 0.328188f, 22), new(0.7455373f, 0.328188f, 23), new(0.7415169f, 0.1932095f, 23),
                new(0.7415169f, 0.1932095f, 24), new(0.7344861f, 0.03820798f, 24), new(0.7344861f, 0.03820798f, 25),
                new(0.7284673f, 0f, 25), new(0.7284673f, 0f, 26), new(0.7284673f, 0f, 26), new(0.7284673f, 0f, 27),
                new(0.7284637f, 0.01950742f, 27), new(0.7284637f, 0.01950742f, 28), new(0.744511f, 0.1511114f, 28),
                new(0.744511f, 0.1511114f, 29), new(0.7797042f, 0.339151f, 29), new(0.7797042f, 0.339151f, 30),
                new(0.8159378f, 0.4811063f, 30), new(0.8159378f, 0.4811063f, 31), new(0.8360767f, 0.5216214f, 31),
                new(0.8360767f, 0.5216214f, 32), new(0.8421091f, 0.5216245f, 32), new(0.8421091f, 0.5216245f, 33),
                new(0.8873244f, 0.4537715f, 33), new(0.8873244f, 0.4537715f, 34), new(0.9516661f, 0.3370326f, 34),
                new(0.9516661f, 0.3370326f, 35), new(0.9859036f, 0.2392564f, 35), new(0.9859036f, 0.2392564f, 36),
                new(0.9989893f, 0.1620047f, 36), new(0.9989893f, 0.1620047f, 37), new(1f, 0.07123984f, 37),
                new(1f, 0.07123984f, 38), new(0.9999949f, 0.02885608f, 38), new(0.9999949f, 0.02885608f, 39),
                new(0.9999943f, 0.02652205f, 39), new(0.9999943f, 0.02652205f, 40), new(0.9999947f, 0.03302356f, 40)
            }, "dick, you dipshit")
        };

        private LineRenderer _lineRenderer;
        private bool _isActive;

        private float _lastSnapshot = 0.0f;

        private int _nextCount;

        private PlayerInput _playerInput;
        
        public void SetActive(bool value)
        {
            _isActive = value;
        }

        void Awake()
        {
            _lineRenderer = GetComponent<LineRenderer>();

            _playerInput = new PlayerInput();
        }

        private void OnEnable()
        {
            _playerInput?.Enable();
        }

        private void OnDisable()
        {
            _playerInput?.Disable();
        }

        void Update()
        {
            if (!_isActive) return;

            if (Mouse.current.leftButton.wasPressedThisFrame)
            {
            }

            if (Mouse.current.leftButton.isPressed)
            {
                _lastSnapshot -= Time.deltaTime;
                if (_lastSnapshot <= 0.0f)
                {
                    var position = Input.mousePosition;
                    
                    var x = Camera.main.ScreenPointToRay(position);
                    if (Physics.Raycast(x.origin, x.direction, out var hit) && hit.collider.gameObject == gameObject)
                    {
                        _lastSnapshot = samplingRate;
                        
                        var worldPoint = Camera.main.ScreenToWorldPoint(hit.point);
                        
                        _lineRenderer.positionCount++;
                        _lineRenderer.SetPosition(_nextCount++, worldPoint);
                    }
                }
            }

            if (Mouse.current.leftButton.wasReleasedThisFrame)
            {
                if (_nextCount == 0)
                {
                    return;
                }

                _nextCount = 0;

                var points = new List<Point>();

                var transformPos = transform.position;

                for (var i = 0; i < _lineRenderer.positionCount - 1; i++)
                {
                    var p1 = _lineRenderer.GetPosition(i) - transformPos;
                    var p2 = _lineRenderer.GetPosition(i + 1) - transformPos;

                    points.Add(new Point(p1.x, p1.y, i));
                    points.Add(new Point(p2.x, p2.y, i));
                }

                points = Normalize(points);

                var gesture = PointCloudRecognizer.Classify(new Gesture(points.ToArray()), _trainingsSet);


                Debug.Log(string.Join(',',
                    points.Select(n =>
                        $"new({n.X.ToString(CultureInfo.InvariantCulture)}f,{n.Y.ToString(CultureInfo.InvariantCulture)}f,{n.StrokeID})")));

                Debug.Log("that's a " + gesture);

                _lineRenderer = null;
            }
        }

        public List<Point> Normalize(List<Point> points)
        {
            if (points == null || points.Count == 0) return points;

            // Step 1: Find min and max values for x and y
            float minX = float.MaxValue, minY = float.MaxValue;
            float maxX = float.MinValue, maxY = float.MinValue;

            foreach (var point in points)
            {
                if (point.X < minX) minX = point.X;
                if (point.Y < minY) minY = point.Y;

                if (point.X > maxX) maxX = point.X;
                if (point.Y > maxY) maxY = point.Y;
            }

            // Step 2: Normalize each point
            var rangeX = maxX - minX;
            var rangeY = maxY - minY;

            var normalizedPoints = new List<Point>();
            foreach (var point in points)
            {
                var normalizedX = (point.X - minX) / rangeX;
                var normalizedY = (point.Y - minY) / rangeY;

                // Keep the lineId unchanged
                normalizedPoints.Add(new Point(normalizedX, normalizedY, point.StrokeID));
            }

            return normalizedPoints;
        }
    }
}
